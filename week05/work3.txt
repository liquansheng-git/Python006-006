作业三：请用自己的语言描述如下问题：
在你目前的工作场景中，哪个业务适合使用 rabbitmq？ 引入 rabbitmq 主要解决什么问题?（非相关工作可以以设计淘宝购物和结账功能为例来描述）
如何避免消息重复投递或重复消费？
交换机 fanout、direct、topic 有什么区别？
架构中引入消息队列是否利大于弊？你认为消息队列有哪些缺点？
作业 3 提示：
（1）服务间异步通信
（2）顺序消费
（3）定时任务
（4）流量削峰
（5）解耦
（6）利用消息队列将高并发访问变为串行操作
（7）异步下单
（8）消息队列持久化

1.工作中使用rabbitmq是流程单。由于有6台服务器，引入rabbitmq可以解决流程多。
处理流程的时候，根据流程的类别，创建相应的队列名称呢。同时队列的任务安排这一块交给运维来做，算是服务解耦了。
2.在消息生产时，rabbitmq内部针对每条生产者发送的消息生成一个 inner-msg-id，作为去重的依据（消息投递失败并重传），
避免重复的消息进入队列；在消息消费时，要求消息体中必须要有一个 bizId（对于同一业务全局唯一，如支付 ID、订单 ID、帖子 ID 等）作为去重的依据，
避免同一条消息被重复消费。
3.rabbitMQ提供了四种Exchange：fanout，direct，topic，header
header模式在实际使用中较少
性能排序：fanout>direct>>topic。比例大约为11：10：6
4.
架构中引入消息队列是否利大于弊:
看系统的业务场景，如果业务场景比较多，感觉用消息队列利大于弊；
使用了消息队列会有什么缺点:
系统的可用性降低：如果消息队列挂了，那么系统也会受到影响
系统的复杂性增加：要多考虑很多方面的问题，比如一致性问题、如何保证消息不被重复消费，如何保证消息可靠传输。因此，需要考虑的东更多，系统的复杂性增大。

